FIX:
- handletup can't evaluate nested tuples.
- Capturing stdout while letting it print out naturally in `cap`.
- Proper pipelining. Might have to pass handles around to also allow for background processes to be resumed.
- ^ Currently, it outputs a string so when "," gets it, it thinks it's a command and passes it to the system.
-   ^ The current temporay solution is to only pass operands to the system in "," and not expressions.
- Implement a better way to check types. Currently can't check Tarr Tany or anything like that. This screws with BaseOp type-checking.

TODO:
- Implement (hack) return, continue, and break.
- `break` and `return` could be return () and <- Plan is to use the type system to signal breaks, but perhaps a signal is needed.
    ^           ^ do nothing.
    signal the loop to end somehow.
- Base operations
- Remaining: control-flow, let, =, function definition, <-, ->, =>, &
- Implement the global boolean state.
- Map operations to names
- Implement Grr.
- Implement Imp.

FUTURE:
Front part:
- Tree-sitter or language server protocol integration.
- Translate markdown (and colors) to ansi in strings.
- Include a wrapper for other interactive shells.
- Scratch paper.
Lang part:
- Make "," follow spec.
- Rust style enum and match, which implies switch case.
- Struct and typeclass/trait.
- More string types. E.G. lit string, regex string, whatever.
- Slices, anonymous functions, libraries.
- Compiled version.
- Real generic support.
- Seperate IO operations and non-IO operations. This will allow for better handling of both.
- Make a "Hare" variant. A lazy, probably faster version.

NOTES:
Currently, pipe is just eval left and pass it to system and feed out to right process.
Redirect is just eval right, NOT passing it to system, then feed to left process.
